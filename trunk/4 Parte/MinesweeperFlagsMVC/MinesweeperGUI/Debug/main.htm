<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" >
<head>
    <title>Debug Page</title>
    <script language="javascript" src="/Source/HttpRequest.js"></script>
    <script language="javascript" src="/Source/BoardMVC.js"></script>
    <script language="javascript" >

        function testMVC(p1) {

            var instanceVariable = "instance Variable";
            var showInstanceVariable = function() { alert(instanceVariable); }

            var viewProperties = function(obj) {

                for (var k in current) {
                    alert(k);
                }
            }

            var current = this;


            this.showMe = function(str) { this.showIIMe( "[" + str + "]"); }
            this.showIIMe = function(str) { alert(str); }

            this.meShow = function() { viewProperties(this); }

            this.model = function() {
                var a = "(:)";

                var h = function() {
                    a = "(.)model - h(.)";
                    alert(a);
                }

                this.model.show = function() {
                    h();
                    alert("Funcção Show de Model. Valor do Parametro P1 = [" + p1 + "]. Valor do Parametro a = [" + a + "]");
                }

                this.model.showp = function() { alert(p1); }
                this.model.showInstanceVariable = function() { showInstanceVariable(); }

                this.model.viewProperties = function() {
                    //                    for (var k in this) {
                    //                        alert(k);
                    //                    }

                    viewProperties(this);

                }


            }

            this.view = function() {

                var a = "(.)(.)";
                var h = function() {
                    a = "(.)view - h(.)";
                    alert(a);
                }

                var j = function() {
                    alert(a);
                }                

                this.view.show = function() {                    

                    h();
                    showInstanceVariable();

                    current.model.show();

                    j();                                        
                }

                this.view.showp = function() { alert(p1); }
                this.view.showInstanceVariable = function() { showInstanceVariable(); }
            }

            this.model();
            this.view();

            var getModel = function() {
                alert(this);
                alert(this.model);

                //model.show();

                return this.model;
            }     
        }



        var y = new testMVC("p param");
        //y.showMe("João");
        //y.viewProperties();

//        y.model.viewProperties();
//        alert('*');
//        y.meShow();

        //alert(y.constructor);

//        for (var key in y) {
//            alert(key);
//        }
//        
        
//        y.model.show();
//        y.model.showp();
//        y.model.showInstanceVariable();

//        alert( "Start View" );

        y.view.show();
//        y.view.showp();
//        y.view.showInstanceVariable();



//        for (var key in y) {
//            alert( key );
//        }
//        //x.model.show();
    
        function doWork() {
            try {
                sOut.innerHTML += "*";
            }
            finally{ setTimeout("doWork()", 1000); }
        }

        function addPlayer() {          
            var f = document.forms["frmAJAXAddPlayer"];

            alert(f.capitals.value);
            for (var i = 0; i < f.capitals.length; i++) {
                if (f.capitals[i].checked) {
                    alert(f.capitals[i].value); break;
                }
            }
            

            if (f != undefined) {
                var gName      = f.gName.value;
                var playerName = f.playerName.value;

                try {
                    var req = new HttpRequest("AddPlayer", gName, playerName, 0);
                    req.Request("p1", "João ç", "p2", 2);
                    alert(req.getResponseText());
//                    alert(req.isTrue());
//                    alert(req.isFalse());
                } catch (e) { alert(e); }
            }
        }
    </script>
</head>
<body onload="setTimeout('doWork()', 1000);">
  <form id="frmCreateGame" action="/CreateGame.ashx" method="get">
     Game Name <input type="text" id="gName" name="gName" /><br/>
     Player Name<input type="text" id="playerName" name="playerName" /><br />
     <input type="submit" value="Create Game"/>
   </form>
  <br/>
  <form id="frmAddPlayer" action="/AddPlayer.ashx" method="get">
     Game Name <input type="text" id="gName" name="gName" /><br/>
     Player Name<input type="text" id="playerName" name="playerName" /><br />
     <input type="submit" value="Join Game" disabled="disabled"/>
   </form>
   <br/> 
  <form id="frmAJAXAddPlayer" method="get">
  
  <input type="checkbox" name="online" checked="checked" />
  
     
<br/><input type="radio" id="capitals" name="capitals" value="Miami" />Miami
<br/><input type="radio" id="capitals" name="capitals" value="Tallahassee" />Tallahassee
<br/><input type="radio" id="capitals" name="capitals" value="Fort Lauderdale" />Fort Lauderdale
<br/><input type="radio" id="capitals" name="capitals" value="Daytona Beach" />Daytona Beach

     Game Name <input type="text" id="gName" name="gName" /><br/>
     Player Name<input type="text" id="playerName" name="playerName" /><br />
     <a href="javascript:javascript:addPlayer();">Join Player</a>
     <span id="sOut"></span>
   </form>
</body>
</html>
